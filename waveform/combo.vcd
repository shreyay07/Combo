$date
	Wed Jul 30 13:01:23 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module combo_tb $end
$var wire 1 ! mux_out $end
$var wire 2 " enc_out [1:0] $end
$var wire 4 # dec_out [3:0] $end
$var reg 1 $ I0 $end
$var reg 1 % I1 $end
$var reg 2 & choice [1:0] $end
$var reg 2 ' dec_in [1:0] $end
$var reg 4 ( enc_in [3:0] $end
$var reg 1 ) sel $end
$var integer 32 * i [31:0] $end
$scope module uut $end
$var wire 1 $ I0 $end
$var wire 1 % I1 $end
$var wire 2 + choice [1:0] $end
$var wire 2 , dec_in [1:0] $end
$var wire 4 - enc_in [3:0] $end
$var wire 1 ) sel $end
$var wire 1 . mux $end
$var wire 2 / enc [1:0] $end
$var wire 4 0 dec [3:0] $end
$var reg 4 1 dec_out [3:0] $end
$var reg 2 2 enc_out [1:0] $end
$var reg 1 ! mux_out $end
$scope module DEC $end
$var wire 2 3 dec_in [1:0] $end
$var reg 4 4 dec_out [3:0] $end
$upscope $end
$scope module ENC $end
$var wire 4 5 enc_in [3:0] $end
$var reg 2 6 enc_out [1:0] $end
$upscope $end
$scope module MUX $end
$var wire 1 $ I0 $end
$var wire 1 % I1 $end
$var wire 1 ) sel $end
$var wire 1 . mux_out $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 6
bx 5
bx 4
bx 3
b0 2
b0 1
bx 0
bx /
0.
bx -
bx ,
b0 +
b0 *
0)
bx (
bx '
b0 &
0%
0$
b0 #
b0 "
0!
$end
#10
1%
b1 *
#20
1!
1.
1$
0%
b10 *
#30
1%
b11 *
#40
0!
0.
1)
0$
0%
b100 *
#50
1!
1.
1%
b101 *
#60
0!
0.
1$
0%
b110 *
#70
1!
1.
1%
b111 *
#80
b0 /
b0 6
b0 "
b0 2
0!
b1 (
b1 -
b1 5
b1 &
b1 +
b1000 *
#90
b1 "
b1 2
b1 /
b1 6
b10 (
b10 -
b10 5
#100
b10 "
b10 2
b10 /
b10 6
b100 (
b100 -
b100 5
#110
b11 "
b11 2
b11 /
b11 6
b1000 (
b1000 -
b1000 5
#120
bx "
bx 2
bx /
bx 6
b0 (
b0 -
b0 5
#130
b1 0
b1 4
b1 #
b1 1
b0 "
b0 2
b0 '
b0 ,
b0 3
b10 &
b10 +
#140
b100 #
b100 1
b100 0
b100 4
b10 '
b10 ,
b10 3
#160
b1000 #
b1000 1
b1000 0
b1000 4
b11 '
b11 ,
b11 3
#170
