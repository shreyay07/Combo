/* Generated by Yosys 0.9 (git sha1 1979e0b) */

//(* top =  1  *)
//(* src = "../src/combo.v:1" *)
module combo(choice, dec_in, sel, I0, I1, enc_in, mux_out, enc_out, dec_out);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  //(* src = "../src/combo.v:3" *)
  input I0;
  //(* src = "../src/combo.v:3" *)
  input I1;
  //(* src = "../src/combo.v:2" *)
  input [1:0] choice;
  //(* src = "../src/combo.v:11" *)
  wire [3:0] dec;
  //(* src = "../src/combo.v:2" *)
  input [1:0] dec_in;
  //(* src = "../src/combo.v:7" *)
  output [3:0] dec_out;
  //(* src = "../src/combo.v:10" *)
  wire [1:0] enc;
  //(* src = "../src/combo.v:4" *)
  input [3:0] enc_in;
  //(* src = "../src/combo.v:6" *)
  output [1:0] enc_out;
  //(* src = "../src/combo.v:9" *)
  wire mux;
  //(* src = "../src/combo.v:5" *)
  output mux_out;
  //(* src = "../src/combo.v:3" *)
  input sel;
  INVX1 _09_ (
    .A(choice[0]),
    .Y(_00_)
  );
  INVX1 _10_ (
    .A(choice[1]),
    .Y(_01_)
  );
  INVX1 _11_ (
    .A(dec[0]),
    .Y(_02_)
  );
  INVX1 _12_ (
    .A(dec[1]),
    .Y(_03_)
  );
  INVX1 _13_ (
    .A(dec[2]),
    .Y(_04_)
  );
  INVX1 _14_ (
    .A(dec[3]),
    .Y(_05_)
  );
  INVX1 _15_ (
    .A(enc[0]),
    .Y(_06_)
  );
  INVX1 _16_ (
    .A(enc[1]),
    .Y(_07_)
  );
  NOR2X1 _17_ (
    .A(choice[0]),
    .B(choice[1]),
    .Y(_08_)
  );
  AND2X1 _18_ (
    .A(mux),
    .B(_08_),
    .Y(mux_out)
  );
  NOR3X1 _19_ (
    .A(choice[0]),
    .B(_01_),
    .C(_02_),
    .Y(dec_out[0])
  );
  NOR3X1 _20_ (
    .A(choice[0]),
    .B(_01_),
    .C(_03_),
    .Y(dec_out[1])
  );
  NOR3X1 _21_ (
    .A(choice[0]),
    .B(_01_),
    .C(_04_),
    .Y(dec_out[2])
  );
  NOR3X1 _22_ (
    .A(choice[0]),
    .B(_01_),
    .C(_05_),
    .Y(dec_out[3])
  );
  NOR3X1 _23_ (
    .A(_00_),
    .B(choice[1]),
    .C(_06_),
    .Y(enc_out[0])
  );
  NOR3X1 _24_ (
    .A(_00_),
    .B(choice[1]),
    .C(_07_),
    .Y(enc_out[1])
  );
  //(* module_not_derived = 32'd1 *)
  //(* src = "../src/combo.v:25" *)
  decoder DEC (
    .dec_in(dec_in),
    .dec_out(dec)
  );
  //(* module_not_derived = 32'd1 *)
  //(* src = "../src/combo.v:20" *)
  encoder ENC (
    .enc_in(enc_in),
    .enc_out(enc)
  );
  //(* module_not_derived = 32'd1 *)
  //(* src = "../src/combo.v:13" *)
  mux_2_1 MUX (
    .I0(I0),
    .I1(I1),
    .mux_out(mux),
    .sel(sel)
  );
endmodule

//(* src = "../src/decoder.v:1" *)
module decoder(dec_in, dec_out);
  wire _0_;
  wire _1_;
  //(* src = "../src/decoder.v:2" *)
  input [1:0] dec_in;
  //(* src = "../src/decoder.v:3" *)
  output [3:0] dec_out;
  INVX1 _2_ (
    .A(dec_in[1]),
    .Y(_0_)
  );
  INVX1 _3_ (
    .A(dec_in[0]),
    .Y(_1_)
  );
  NOR2X1 _4_ (
    .A(dec_in[1]),
    .B(dec_in[0]),
    .Y(dec_out[0])
  );
  NOR2X1 _5_ (
    .A(dec_in[1]),
    .B(_1_),
    .Y(dec_out[1])
  );
  NOR2X1 _6_ (
    .A(_0_),
    .B(dec_in[0]),
    .Y(dec_out[2])
  );
  NOR2X1 _7_ (
    .A(_0_),
    .B(_1_),
    .Y(dec_out[3])
  );
endmodule

//(* src = "../src/encoder.v:1" *)
module encoder(enc_in, enc_out);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  //(* src = "../src/encoder.v:2" *)
  input [3:0] enc_in;
  //(* src = "../src/encoder.v:3" *)
  output [1:0] enc_out;
  INVX1 _06_ (
    .A(enc_in[2]),
    .Y(_03_)
  );
  NOR2X1 _07_ (
    .A(enc_in[0]),
    .B(enc_in[1]),
    .Y(_04_)
  );
  NAND3X1 _08_ (
    .A(enc_in[3]),
    .B(_03_),
    .C(_04_),
    .Y(_05_)
  );
  NOR2X1 _09_ (
    .A(enc_in[0]),
    .B(enc_in[3]),
    .Y(_00_)
  );
  NAND2X1 _10_ (
    .A(enc_in[1]),
    .B(_00_),
    .Y(_01_)
  );
  OAI21X1 _11_ (
    .A(enc_in[2]),
    .B(_01_),
    .C(_05_),
    .Y(enc_out[0])
  );
  NAND2X1 _12_ (
    .A(enc_in[2]),
    .B(_00_),
    .Y(_02_)
  );
  OAI21X1 _13_ (
    .A(enc_in[1]),
    .B(_02_),
    .C(_05_),
    .Y(enc_out[1])
  );
endmodule

//(* src = "../src/mux_2_1.v:1" *)
module mux_2_1(sel, I0, I1, mux_out);
  wire _0_;
  wire _1_;
  //(* src = "../src/mux_2_1.v:2" *)
  input I0;
  //(* src = "../src/mux_2_1.v:2" *)
  input I1;
  //(* src = "../src/mux_2_1.v:3" *)
  output mux_out;
  //(* src = "../src/mux_2_1.v:2" *)
  input sel;
  INVX1 _2_ (
    .A(I0),
    .Y(_0_)
  );
  NAND2X1 _3_ (
    .A(I1),
    .B(sel),
    .Y(_1_)
  );
  OAI21X1 _4_ (
    .A(_0_),
    .B(sel),
    .C(_1_),
    .Y(mux_out)
  );
endmodule
